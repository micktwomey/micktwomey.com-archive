{
	"version": "https://jsonfeed.org/version/1",
	"title": "Michael Twomey's Blog",
	"icon": "https://micro.blog/micktwomey/avatar.jpg",
	"home_page_url": "https://micktwomey.com/",
	"feed_url": "https://micktwomey.com/feed.json",
	"items": [
		
			{
				"id": "http://micktwomey.micro.blog/2025/06/05/glyph-i-think-im-done/",
				"title": "Glyph: I Think I’m Done Thinking About genAI For Now",
				"content_html": "<p>This post captures a lot of my thoughts, saves me having to state my position :D</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "This post captures a lot of my thoughts, saves me having to state my position :D\r\n\r\n<blockquote class=\"quoteback\" data-author=\"blog.glyph.im\" data-avatar=\"https://micro.blog/blog.glyph.im/avatar.jpg\" cite=\"https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html\"><p>Deciphering Glyph ::\r\n        I Think I’m Done Thinking About genAI For Now <a href=\"https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html\">blog.glyph.im</a></p><footer>blog.glyph.im <cite><a href=\"https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html\" class=\"u-in-reply-to\">https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\n",
				"date_published": "2025-06-05T15:41:19+01:00",
				"url": "https://micktwomey.com/2025/06/05/glyph-i-think-im-done/",
				"tags": ["tools"]
			},
			{
				"id": "http://micktwomey.micro.blog/2025/04/24/you-wouldnt-steal-a-car/",
				"title": "\"You wouldn't steal a car\" campaign pirated content",
				"content_html": "<p>I can&rsquo;t stop laughing at this. It&rsquo;s so fitting for that ad campaign:</p>\n<!-- raw HTML omitted -->\n<p>In a reply someone pointed out that they also stole the music.</p>\n<p>(seen via <a href=\"https://jmason.ie/2025/04/24/084003a.html\">Justin&rsquo;s blog</a>)</p>\n",
				"content_text": "I can't stop laughing at this. It's so fitting for that ad campaign:\r\n\r\n<blockquote class=\"quoteback\" data-author=\"fedi.rib.gay\" data-avatar=\"https://micro.blog/fedi.rib.gay/avatar.jpg\" cite=\"https://fedi.rib.gay/notes/a6xqityngfubsz0f\"><p>Rib :ms_red_panda: (@Rib) <a href=\"https://fedi.rib.gay/notes/a6xqityngfubsz0f\">fedi.rib.gay</a></p><footer>fedi.rib.gay <cite><a href=\"https://fedi.rib.gay/notes/a6xqityngfubsz0f\" class=\"u-in-reply-to\">https://fedi.rib.gay/notes/a6xqityngfubsz0f</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\r\n\r\nIn a reply someone pointed out that they also stole the music.\r\n\r\n(seen via [Justin's blog](https://jmason.ie/2025/04/24/084003a.html))\n",
				"date_published": "2025-04-24T11:36:10+01:00",
				"url": "https://micktwomey.com/2025/04/24/you-wouldnt-steal-a-car/"
			},
			{
				"id": "http://micktwomey.micro.blog/2025/04/23/osh-is-a-great-drop/",
				"title": "osh is a great drop in bash replacement",
				"content_html": "<!-- raw HTML omitted -->\n<p>I&rsquo;ve starting using <a href=\"https://oils.pub/osh.html\">osh</a> for testing my bash scripts (mostly used in build and deployments). It&rsquo;s been great for both giving better error messages and spotting problems <a href=\"https://www.shellcheck.net/\">shellcheck</a> mightn&rsquo;t catch.</p>\n<p>This has been my favourite so far:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\">osh -o strict:all ./myscript.sh\n    <span style=\"color:#66d9ef\">if</span> assert_task_definition_is_older <span style=\"color:#e6db74\">&#34;</span><span style=\"color:#e6db74\">${</span>task_definition<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;</span> <span style=\"color:#e6db74\">&#34;deployed&#34;</span>; <span style=\"color:#66d9ef\">then</span>\n    ^~\nmyscript.sh:119: errexit was disabled <span style=\"color:#66d9ef\">for</span> this construct\n\n    <span style=\"color:#66d9ef\">if</span> assert_task_definition_is_older <span style=\"color:#e6db74\">&#34;</span><span style=\"color:#e6db74\">${</span>task_definition<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;</span> <span style=\"color:#e6db74\">&#34;deployed&#34;</span>; <span style=\"color:#66d9ef\">then</span>\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmyscript.sh:119: fatal: Can<span style=\"color:#e6db74\">&#39;t run a proc while errexit is disabled. Use &#39;</span>try<span style=\"color:#960050;background-color:#1e0010\">&#39;</span> or wrap it in a process with $0 myproc\n</code></pre></div><p>This leads to this <a href=\"https://www.oilshell.org/preview/doc/error-handling.html#design-mistake-the-disabled-errexit-quirk\">interesting note</a> on how <code>errexit</code> and <code>if</code> statements invoking shell functions lead to surprising behaviour (basically errexit is disabled).</p>\n",
				"content_text": "<blockquote class=\"quoteback\" data-author=\"oils.pub\" data-avatar=\"https://micro.blog/oils.pub/avatar.jpg\" cite=\"https://oils.pub/osh.html\"><p>Nine Reasons to Use OSH <a href=\"https://oils.pub/osh.html\">oils.pub</a></p><footer>oils.pub <cite><a href=\"https://oils.pub/osh.html\" class=\"u-in-reply-to\">https://oils.pub/osh.html</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\n\nI've starting using [osh](https://oils.pub/osh.html) for testing my bash scripts (mostly used in build and deployments). It's been great for both giving better error messages and spotting problems [shellcheck](https://www.shellcheck.net/) mightn't catch.\n\nThis has been my favourite so far:\n\n```bash\nosh -o strict:all ./myscript.sh\n    if assert_task_definition_is_older \"${task_definition}\" \"deployed\"; then\n    ^~\nmyscript.sh:119: errexit was disabled for this construct\n\n    if assert_task_definition_is_older \"${task_definition}\" \"deployed\"; then\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmyscript.sh:119: fatal: Can't run a proc while errexit is disabled. Use 'try' or wrap it in a process with $0 myproc\n```\nThis leads to this [interesting note](https://www.oilshell.org/preview/doc/error-handling.html#design-mistake-the-disabled-errexit-quirk) on how `errexit` and `if` statements invoking shell functions lead to surprising behaviour (basically errexit is disabled).\n",
				"date_published": "2025-04-23T15:23:21+01:00",
				"url": "https://micktwomey.com/2025/04/23/osh-is-a-great-drop/",
				"tags": ["TIL","shell","tools"]
			},
			{
				"id": "http://micktwomey.micro.blog/2025/04/21/the-gist-trans-rights-are/",
				
				"content_html": "<!-- raw HTML omitted -->\n<p>Great analysis of both the recent UK court ruling and a recent CJEU ruling on trans rights. The CJEU ruling is much more relevant to Ireland but got no press coverage.</p>\n",
				"content_text": "<blockquote class=\"quoteback\" data-author=\"thegist.ie\" data-avatar=\"https://micro.blog/thegist.ie/avatar.jpg\" cite=\"https://www.thegist.ie/the-gist-trans-rights-are-data-rights/\"><p>The Gist: Trans rights are Data rights <a href=\"https://www.thegist.ie/the-gist-trans-rights-are-data-rights/\">thegist.ie</a></p><footer>thegist.ie <cite><a href=\"https://www.thegist.ie/the-gist-trans-rights-are-data-rights/\" class=\"u-in-reply-to\">https://www.thegist.ie/the-gist-trans-rights-are-data-rights/</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\r\n\r\nGreat analysis of both the recent UK court ruling and a recent CJEU ruling on trans rights. The CJEU ruling is much more relevant to Ireland but got no press coverage.\n",
				"date_published": "2025-04-21T12:37:10+01:00",
				"url": "https://micktwomey.com/2025/04/21/the-gist-trans-rights-are/"
			},
			{
				"id": "http://micktwomey.micro.blog/2025/04/20/using-uv-for-django-projects/",
				"title": "Using uv for Django projects",
				"content_html": "<p><a href=\"https://docs.astral.sh/uv/\">uv</a> can be used to bootstrap Python for a Django project on a machine with nothing else except uv installed.</p>\n<p>Rough steps:</p>\n<ol>\n<li><a href=\"https://docs.astral.sh/uv/#installation\">Install uv</a>. This is the trickiest bit but sets you up well for future projects.</li>\n<li>Create a Python project</li>\n<li>Add Django as a dependency to the project</li>\n<li>Run Django commands using uv (<code>uv run django-admin</code> or <code>uv run python manage.py</code>)</li>\n</ol>\n<p>An example using the Django tutorial&rsquo;s first steps:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"color:#75715e\"># Install uv</span>\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n<span style=\"color:#75715e\"># If you need curl try `brew install curl or `apt-get install curl` or `yum install curl`</span>\n\n<span style=\"color:#75715e\"># Create a python project</span>\nuv init djangotutorial\n\n<span style=\"color:#75715e\"># Go into the project folder</span>\ncd djangotutorial\n\n<span style=\"color:#75715e\"># Add Django</span>\nuv add django\n\n<span style=\"color:#75715e\"># Initialize a Django site</span>\nuv run django-admin startproject mysite .\n\n<span style=\"color:#75715e\"># Run the site</span>\nuv run python manage.py runserver\n\n<span style=\"color:#75715e\"># Go to http://localhost:8000/</span>\n</code></pre></div><p>Where the tutorial says <code>python manage.py</code> you can pretty much always use <code>uv run python manage.py</code>.</p>\n<p>The other nice feature of this approach over the usual Django tutorial is you start out with a project Python project, ready to package and deploy.</p>\n",
				"content_text": "[uv](https://docs.astral.sh/uv/) can be used to bootstrap Python for a Django project on a machine with nothing else except uv installed.\n\nRough steps:\n1. [Install uv](https://docs.astral.sh/uv/#installation). This is the trickiest bit but sets you up well for future projects.\n2. Create a Python project\n3. Add Django as a dependency to the project\n4. Run Django commands using uv (`uv run django-admin` or `uv run python manage.py`)\n\n\nAn example using the Django tutorial's first steps:\n```bash\n# Install uv\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n# If you need curl try `brew install curl or `apt-get install curl` or `yum install curl`\n\n# Create a python project\nuv init djangotutorial\n\n# Go into the project folder\ncd djangotutorial\n\n# Add Django\nuv add django\n\n# Initialize a Django site\nuv run django-admin startproject mysite .\n\n# Run the site\nuv run python manage.py runserver\n\n# Go to http://localhost:8000/\n```\n\nWhere the tutorial says `python manage.py` you can pretty much always use `uv run python manage.py`. \n\nThe other nice feature of this approach over the usual Django tutorial is you start out with a project Python project, ready to package and deploy.\n",
				"date_published": "2025-04-20T18:12:05+01:00",
				"url": "https://micktwomey.com/2025/04/20/using-uv-for-django-projects/",
				"tags": ["python"]
			},
			{
				"id": "http://micktwomey.micro.blog/2025/04/17/pin-your-github-actions-just/",
				"title": "Pin your GitHub Actions",
				"content_html": "<p>Just going to echo this post:</p>\n<!-- raw HTML omitted -->\n<p>Pin your actions!</p>\n<p>I&rsquo;ve done it in my work, and while it&rsquo;s a little tedious to setup initially it&rsquo;s not to bad with dependabot updating them automatically.</p>\n",
				"content_text": "Just going to echo this post:\n\n<blockquote class=\"quoteback\" data-author=\"michaelheap.com\" data-avatar=\"https://micro.blog/michaelheap.com/avatar.jpg\" cite=\"https://michaelheap.com/pin-your-github-actions/\"><p>Pin your GitHub Actions <a href=\"https://michaelheap.com/pin-your-github-actions/\">michaelheap.com</a></p><footer>michaelheap.com <cite><a href=\"https://michaelheap.com/pin-your-github-actions/\" class=\"u-in-reply-to\">https://michaelheap.com/pin-your-github-actions/</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\n\nPin your actions!\n\nI've done it in my work, and while it's a little tedious to setup initially it's not to bad with dependabot updating them automatically.\n",
				"date_published": "2025-04-17T21:12:17+01:00",
				"url": "https://micktwomey.com/2025/04/17/pin-your-github-actions-just/",
				"tags": ["security"]
			},
			{
				"id": "http://micktwomey.micro.blog/2025/02/15/my-first-playdate-game/",
				"title": "My First Playdate Game!",
				"content_html": "<p>I helped organize <a href=\"https://www.gamecraft.it/events/dublin-gamecraft-2025/\">Dublin GameCraft 2025</a>.</p>\n<p>I also created my first <a href=\"https://play.date/\">Playdate</a> game:</p>\n<!-- raw HTML omitted -->\n<p>The theme was pop and I really wanted to use the crank somehow.</p>\n<p>I have to say, I really enjoyed the process of developing for the Playdate. It helps that the SDK was heavily inspired by <a href=\"https://www.love2d.org/\">LÖVE</a>, which is a lovely development environment.</p>\n<p>You can see all the other submissions <a href=\"https://itch.io/jam/dublin-gamecraft-2025\">here</a>.</p>\n",
				"content_text": "I helped organize [Dublin GameCraft 2025](https://www.gamecraft.it/events/dublin-gamecraft-2025/).\n\nI also created my first [Playdate](https://play.date/) game:\n\n<blockquote class=\"quoteback\" data-author=\"micktwomey.itch.io\" data-avatar=\"https://micro.blog/micktwomey.itch.io/avatar.jpg\" cite=\"https://micktwomey.itch.io/pop-your-bubble\"><p>Pop Your Bubble by Michael Twomey <a href=\"https://micktwomey.itch.io/pop-your-bubble\">micktwomey.itch.io</a></p><footer>micktwomey.itch.io <cite><a href=\"https://micktwomey.itch.io/pop-your-bubble\" class=\"u-in-reply-to\">https://micktwomey.itch.io/pop-your-bubble</a></cite></footer></blockquote><script src=\"https://cdn.micro.blog/quoteback.js\"></script>\n\nThe theme was pop and I really wanted to use the crank somehow.\n\nI have to say, I really enjoyed the process of developing for the Playdate. It helps that the SDK was heavily inspired by [LÖVE](https://www.love2d.org/), which is a lovely development environment.\n\nYou can see all the other submissions [here](https://itch.io/jam/dublin-gamecraft-2025).\n",
				"date_published": "2025-02-15T12:00:00+01:00",
				"url": "https://micktwomey.com/2025/02/15/my-first-playdate-game/",
				"tags": ["games","gamecraft","events","playdate"]
			},
			{
				"id": "http://micktwomey.micro.blog/2024/12/10/postgresql-not-null-can-be/",
				"title": "PostgreSQL NOT NULL can be added without locking",
				"content_html": "<p>There&rsquo;s bit of an interesting rabbit hole with NOT NULL constraints vs locking up your DB.</p>\n<p>It starts with &ldquo;is a NOT NULL check contraint worse than a NOT NULL&rdquo;?</p>\n<p>The docs hint at some difference: <a href=\"https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-NOT-NULL\">https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-NOT-NULL</a></p>\n<p>SO thread: <a href=\"https://dba.stackexchange.com/questions/158499/postgres-how-is-set-not-null-more-efficient-than-check-constraint\">https://dba.stackexchange.com/questions/158499/postgres-how-is-set-not-null-more-efficient-than-check-constraint</a></p>\n<p>Which points to <a href=\"https://dba.stackexchange.com/questions/66840/add-not-null-constraint-to-large-table-without-table-scan\">https://dba.stackexchange.com/questions/66840/add-not-null-constraint-to-large-table-without-table-scan</a></p>\n<p>Which finally points to <a href=\"https://dba.stackexchange.com/questions/267947/how-can-i-set-a-column-to-not-null-without-locking-the-table-during-a-table-scan/268128#268128\">https://dba.stackexchange.com/questions/267947/how-can-i-set-a-column-to-not-null-without-locking-the-table-during-a-table-scan/268128#268128</a></p>\n<p>The big problem is adding a NOT NULL constraint can badly lock up the table and other sessions.</p>\n<p>Using a constraint with <code>NOT VALID</code> and then validating later is a work around.</p>\n<p>There&rsquo;s a third step you can do: add a <code>NOT NULL</code> after this an PostgreSQL will do a no-lock update.</p>\n<p>First add the constraint:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sql\" data-lang=\"sql\"><span style=\"color:#75715e\">-- short-time exclusive lock\n</span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">alter</span> <span style=\"color:#66d9ef\">table</span> foos \n  <span style=\"color:#66d9ef\">add</span> <span style=\"color:#66d9ef\">constraint</span> foos_not_null \n  <span style=\"color:#66d9ef\">check</span> (bar1 <span style=\"color:#66d9ef\">is</span> <span style=\"color:#66d9ef\">not</span> <span style=\"color:#66d9ef\">null</span>) <span style=\"color:#66d9ef\">not</span> <span style=\"color:#66d9ef\">valid</span>;\n</code></pre></div><p>Next validate it:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sql\" data-lang=\"sql\"><span style=\"color:#75715e\">-- seqscan, but without exclusive lock, concurrent sessions can read/write\n</span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">alter</span> <span style=\"color:#66d9ef\">table</span> foos validate <span style=\"color:#66d9ef\">constraint</span> foos_not_null;\n</code></pre></div><p>Finally add not null and drop constraint:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sql\" data-lang=\"sql\"><span style=\"color:#75715e\">-- exclusive lock, but foos_not_null proves: there is no NULL in this column\n</span><span style=\"color:#75715e\">-- so this alter table would be fast\n</span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">alter</span> <span style=\"color:#66d9ef\">table</span> foos <span style=\"color:#66d9ef\">alter</span> <span style=\"color:#66d9ef\">column</span> bar1 <span style=\"color:#66d9ef\">set</span> <span style=\"color:#66d9ef\">not</span> <span style=\"color:#66d9ef\">null</span>;\n<span style=\"color:#75715e\">-- not needed anymore\n</span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">alter</span> <span style=\"color:#66d9ef\">table</span> foos <span style=\"color:#66d9ef\">drop</span> <span style=\"color:#66d9ef\">constraint</span> foos_not_null;\n</code></pre></div><p>There is also an approach of adding  a NOT NULL with a default value, PostgreSQL optimizes this case: <a href=\"https://brandur.org/postgres-default\">https://brandur.org/postgres-default</a></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sql\" data-lang=\"sql\"><span style=\"color:#66d9ef\">ALTER</span> <span style=\"color:#66d9ef\">TABLE</span> users\n    <span style=\"color:#66d9ef\">ADD</span> <span style=\"color:#66d9ef\">COLUMN</span> credits bigint <span style=\"color:#66d9ef\">NOT</span> <span style=\"color:#66d9ef\">NULL</span> <span style=\"color:#66d9ef\">DEFAULT</span> <span style=\"color:#ae81ff\">0</span>;\n</code></pre></div>",
				"content_text": "There's bit of an interesting rabbit hole with NOT NULL constraints vs locking up your DB.\n\nIt starts with \"is a NOT NULL check contraint worse than a NOT NULL\"?\n\nThe docs hint at some difference: [https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-NOT-NULL](https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-NOT-NULL)\n\nSO thread: [https://dba.stackexchange.com/questions/158499/postgres-how-is-set-not-null-more-efficient-than-check-constraint](https://dba.stackexchange.com/questions/158499/postgres-how-is-set-not-null-more-efficient-than-check-constraint)\n\nWhich points to [https://dba.stackexchange.com/questions/66840/add-not-null-constraint-to-large-table-without-table-scan](https://dba.stackexchange.com/questions/66840/add-not-null-constraint-to-large-table-without-table-scan)\n\nWhich finally points to [https://dba.stackexchange.com/questions/267947/how-can-i-set-a-column-to-not-null-without-locking-the-table-during-a-table-scan/268128#268128](https://dba.stackexchange.com/questions/267947/how-can-i-set-a-column-to-not-null-without-locking-the-table-during-a-table-scan/268128#268128)\n\n\n\nThe big problem is adding a NOT NULL constraint can badly lock up the table and other sessions.\n\nUsing a constraint with `NOT VALID` and then validating later is a work around.\n\nThere's a third step you can do: add a `NOT NULL` after this an PostgreSQL will do a no-lock update.\n\nFirst add the constraint:\n\n```sql\n-- short-time exclusive lock\nalter table foos \n  add constraint foos_not_null \n  check (bar1 is not null) not valid;\n```\nNext validate it:\n\n```sql\n-- seqscan, but without exclusive lock, concurrent sessions can read/write\nalter table foos validate constraint foos_not_null;\n```\nFinally add not null and drop constraint:\n\n```sql\n-- exclusive lock, but foos_not_null proves: there is no NULL in this column\n-- so this alter table would be fast\nalter table foos alter column bar1 set not null;\n-- not needed anymore\nalter table foos drop constraint foos_not_null;\n```\nThere is also an approach of adding  a NOT NULL with a default value, PostgreSQL optimizes this case: [https://brandur.org/postgres-default](https://brandur.org/postgres-default)\n\n```sql\nALTER TABLE users\n    ADD COLUMN credits bigint NOT NULL DEFAULT 0;\n```\n",
				"date_published": "2024-12-10T12:00:00+01:00",
				"url": "https://micktwomey.com/2024/12/10/postgresql-not-null-can-be/",
				"tags": ["TIL","postgresql"]
			}
	]
}
